{"version":3,"file":"static/js/387.d3d15e65.chunk.js","mappings":"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","sources":["webpack://@brz/screen-capture/./src/componeents/RemoveFigureDialog/style.module.css?6f35","componeents/RemoveFigureDialog/index.tsx","webpack://@brz/screen-capture/./src/componeents/ConfirmRemoveFigure/style.module.css?480a","componeents/ConfirmRemoveFigure/index.tsx","componeents/FigureProps/RowInputActions.tsx","webpack://@brz/screen-capture/./src/componeents/FigureProps/style.module.css?aa32","componeents/FigureProps/FigureTextProps.tsx","componeents/FigureProps/FigureArrowProps.tsx","componeents/FigureProps/FigureFrameProps.tsx","componeents/FigureProps/index.tsx","utils/getRect.ts","hooks/useFigureFocused.ts","componeents/FigureActions/index.tsx","componeents/CropActions/index.tsx","../../../node_modules/dateformat/lib/dateformat.js","componeents/ImageActions/getfileName.ts","webpack://@brz/screen-capture/./src/componeents/DataURL/style.module.css?cbb4","componeents/DataURL/index.tsx","componeents/ImageActions/index.tsx","webpack://@brz/screen-capture/./src/pages/Draw/Actions/style.module.css?5257","pages/Draw/Actions/index.tsx","pages/Draw/DrawPage.tsx","pages/Draw/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"style_dialog__-G6sf\",\"dialogBody\":\"style_dialogBody__qITt+\",\"dialogActions\":\"style_dialogActions__kZsjW\"};","import React from 'react';\r\n\r\nimport { TFigure } from '@brz/ui/src/components/figures';\r\n\r\nimport { Dialog, Button } from '@brz/ui';\r\n\r\nimport styles from './style.module.css';\r\n\r\ntype TProps = {\r\n    figure: TFigure;\r\n    submit: () => void;\r\n    cancel: () => void;\r\n};\r\n\r\nconst RemoveFigureDialog = (props: TProps) => {\r\n    const {\r\n        figure,\r\n        submit,\r\n        cancel,\r\n    } = props;\r\n\r\n    return (\r\n        <Dialog>\r\n            <div\r\n                className={styles.dialog}\r\n                onClick={(event) => {\r\n                    event.stopPropagation();\r\n                }}\r\n            >\r\n                <div className={styles.dialogBody}>\r\n                    Удалить &laquo;{figure.name}&raquo; ?\r\n                </div>\r\n                <div className={styles.dialogActions}>\r\n                    <Button\r\n                        text=\"OK\"\r\n                        onClick={submit}\r\n                    />\r\n                    <Button\r\n                        text='Отмена'\r\n                        onClick={cancel}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default RemoveFigureDialog;","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"style_root__j6HX3\"};","import React, { useState } from 'react';\r\n\r\nimport { TFigure, TFigureId } from '@brz/ui/src/components/figures';\r\n\r\nimport { DeleteIcon } from '@brz/ui';\r\n\r\nimport RemoveFigureDialog from '../RemoveFigureDialog';\r\n\r\nimport styles from './style.module.css';\r\n\r\ntype TProps = {\r\n    figure: TFigure;\r\n    remove: (figureId: TFigureId) => void;\r\n};\r\n\r\nconst ConfirmRemoveFigure = (props: TProps) => {\r\n    const {\r\n        figure,\r\n        remove,\r\n    } = props;\r\n\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={styles.root}\r\n                onClick={() => {\r\n                    setShowConfirm(true);\r\n                }}\r\n            >\r\n                <DeleteIcon />\r\n            </div>\r\n\r\n            {showConfirm && (\r\n                <RemoveFigureDialog\r\n                    figure={figure}\r\n                    cancel={() => {\r\n                        setShowConfirm(false)\r\n                    }}\r\n                    submit={() => {\r\n                        remove(figure.id);\r\n                        setShowConfirm(false);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfirmRemoveFigure;","import React from 'react';\r\n\r\nimport { Button, TFigure, TFigureId } from '@brz/ui';\r\nimport ConfirmRemoveFigure from '../ConfirmRemoveFigure';\r\n\r\ntype TProps = {\r\n    figure: TFigure;\r\n    remove: (figureId: TFigureId) => void;\r\n    toTop: (figureId: TFigureId) => void;\r\n};\r\n\r\nconst RowInputActions = (props: TProps) => {\r\n    const {\r\n        figure,\r\n        remove,\r\n        toTop,\r\n    } = props;\r\n\r\n    return (\r\n        <tr>\r\n            <td />\r\n            <td>\r\n                <ConfirmRemoveFigure\r\n                    figure={figure}\r\n                    remove={remove}\r\n                />\r\n                {' '}\r\n                <Button\r\n                    text=\"Наверх\"\r\n                    onClick={() => {\r\n                        toTop(figure.id);\r\n                    }}\r\n                />\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default RowInputActions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"style_root__xpvEP\",\"table\":\"style_table__V0PxR\",\"tableCol1\":\"style_tableCol1__-LW9U\",\"tableCol2\":\"style_tableCol2__mKBE8\"};","import React from 'react';\r\n\r\nimport { InputColor, InputNumber, InputTextArea, Label } from '@brz/ui/src/components/form';\r\nimport { TFigureId, TFigureText } from '@brz/ui/src/components/figures';\r\n\r\nimport RowInputActions from './RowInputActions';\r\n\r\nimport styles from './style.module.css';\r\n\r\ntype TProps = {\r\n    figure: TFigureText;\r\n    updatefigure: (figure: TFigureText) => void;\r\n    removeFigure: (figureId: TFigureId) => void;\r\n    toTopFigure: (figureId: TFigureId) => void;\r\n};\r\n\r\nconst FigureTextProps = (props: TProps) => {\r\n    const {\r\n        figure,\r\n        updatefigure,\r\n        removeFigure,\r\n        toTopFigure,\r\n    } = props;\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <table className={styles.table}>\r\n                <colgroup>\r\n                    <col className={styles.tableCol1} />\r\n                    <col className={styles.tableCol2} />\r\n                </colgroup>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"color\">Цвет<br />бордюра</Label></td>\r\n                        <td>\r\n                            <InputColor\r\n                                id=\"color\"\r\n                                value={figure.color}\r\n                                onChange={(color) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        color,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"fontSize\">Размер<br />шрифта</Label></td>\r\n                        <td>\r\n                            <InputNumber\r\n                                id=\"fontSize\"\r\n                                value={figure.fontSize}\r\n                                min={14}\r\n                                max={50}\r\n                                onChange={(fontSize) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        fontSize,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"text\">Текст</Label></td>\r\n                        <td>\r\n                            <InputTextArea\r\n                                id=\"text\"\r\n                                value={figure.text}\r\n                                onChange={(text) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        text,\r\n                                    });\r\n                                }}\r\n                                resize='vertical'\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"borderWidth\">Ширина<br />бордюра</Label></td>\r\n                        <td>\r\n                            <InputNumber\r\n                                id=\"borderWidth\"\r\n                                value={figure.borderWidth}\r\n                                min={14}\r\n                                max={50}\r\n                                onChange={(borderWidth) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        borderWidth,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <RowInputActions\r\n                        figure={figure}\r\n                        remove={removeFigure}\r\n                        toTop={toTopFigure}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FigureTextProps;\r\n","import React from 'react';\r\n\r\nimport { InputColor, InputNumber, Label } from '@brz/ui/src/components/form';\r\nimport { TFigureArrow, TFigureId } from '@brz/ui/src/components/figures';\r\n\r\nimport RowInputActions from './RowInputActions';\r\n\r\nimport styles from './style.module.css';\r\n\r\ntype TProps = {\r\n    figure: TFigureArrow;\r\n    updatefigure: (figure: TFigureArrow) => void;\r\n    removeFigure: (figureId: TFigureId) => void;\r\n    toTopFigure: (figureId: TFigureId) => void;\r\n};\r\n\r\nconst FigureArrowProps = (props: TProps) => {\r\n    const {\r\n        figure,\r\n        updatefigure,\r\n        removeFigure,\r\n        toTopFigure,\r\n    } = props;\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <table className={styles.table}>\r\n                <colgroup>\r\n                    <col className={styles.tableCol1} />\r\n                    <col className={styles.tableCol2} />\r\n                </colgroup>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"color\">Цвет</Label></td>\r\n                        <td>\r\n                            <InputColor\r\n                                id=\"color\"\r\n                                value={figure.color}\r\n                                onChange={(color) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        color,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"width\">Ширина</Label></td>\r\n                        <td>\r\n                            <InputNumber\r\n                                id=\"width\"\r\n                                value={figure.width}\r\n                                min={14}\r\n                                max={50}\r\n                                onChange={(width) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        width,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <RowInputActions\r\n                        figure={figure}\r\n                        remove={removeFigure}\r\n                        toTop={toTopFigure}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FigureArrowProps;\r\n","import React from 'react';\r\n\r\nimport { InputColor, InputNumber, Label } from '@brz/ui/src/components/form';\r\nimport { TFigureFrame, TFigureId } from '@brz/ui/src/components/figures';\r\n\r\nimport RowInputActions from './RowInputActions';\r\n\r\nimport styles from './style.module.css';\r\n\r\ntype TProps = {\r\n    figure: TFigureFrame;\r\n    updatefigure: (figure: TFigureFrame) => void;\r\n    removeFigure: (figureId: TFigureId) => void;\r\n    toTopFigure: (figureId: TFigureId) => void;\r\n};\r\n\r\nconst FigureFrameProps = (props: TProps) => {\r\n    const {\r\n        figure,\r\n        updatefigure,\r\n        removeFigure,\r\n        toTopFigure,\r\n    } = props;\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <table className={styles.table}>\r\n                <colgroup>\r\n                    <col className={styles.tableCol1} />\r\n                    <col className={styles.tableCol2} />\r\n                </colgroup>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"color\">Цвет<br />бордюра</Label></td>\r\n                        <td>\r\n                            <InputColor\r\n                                id=\"color\"\r\n                                value={figure.borderColor}\r\n                                onChange={(borderColor) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        borderColor,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Label htmlFor=\"fontSize\">Ширина<br />бордюра</Label></td>\r\n                        <td>\r\n                            <InputNumber\r\n                                id=\"fontSize\"\r\n                                value={figure.borderWidth}\r\n                                min={14}\r\n                                max={50}\r\n                                onChange={(borderWidth) => {\r\n                                    updatefigure({\r\n                                        ...figure,\r\n                                        borderWidth,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <RowInputActions\r\n                        figure={figure}\r\n                        remove={removeFigure}\r\n                        toTop={toTopFigure}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FigureFrameProps;\r\n","import React, { useCallback } from 'react';\r\n\r\nimport { TFigure } from '@brz/ui/src/components/figures';\r\n\r\nimport * as drawSelectors from '../../state/draw/selectors';\r\nimport * as drawActions from '../../state/draw/actions';\r\n\r\nimport FigureTextProps from './FigureTextProps';\r\nimport FigureArrowProps from './FigureArrowProps';\r\nimport FigureFrameProps from './FigureFrameProps';\r\nimport { PanelSection } from '../Panel';\r\n\r\nimport useAppSelector from '../../hooks/useAppSelector';\r\nimport useAppDispatch from '../../hooks/useAppDispatch';\r\n\r\nconst FigureProps = () => {\r\n    const figureFocused = useAppSelector(drawSelectors.figureFocused);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const removeFigure = useCallback((figureId: string) => {\r\n        dispatch(drawActions.removeFigure(figureId));\r\n    }, [\r\n        dispatch,\r\n    ]);\r\n\r\n    const updatefigure = useCallback((figure: TFigure) => {\r\n        dispatch(drawActions.updatefigure({ figure }));\r\n    }, [\r\n        dispatch,\r\n    ]);\r\n\r\n    const toTopFigure = useCallback((figureId: string) => {\r\n        dispatch(drawActions.toTopFigure(figureId));\r\n    }, [\r\n        dispatch,\r\n    ]);\r\n\r\n    if (!figureFocused) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <PanelSection>\r\n            {figureFocused.name === 'text' && (\r\n                <FigureTextProps\r\n                    figure={figureFocused}\r\n                    updatefigure={updatefigure}\r\n                    removeFigure={removeFigure}\r\n                    toTopFigure={toTopFigure}\r\n                />\r\n            )}\r\n            {figureFocused.name === 'arrow' && (\r\n                <FigureArrowProps\r\n                    figure={figureFocused}\r\n                    updatefigure={updatefigure}\r\n                    removeFigure={removeFigure}\r\n                    toTopFigure={toTopFigure}\r\n                />\r\n            )}\r\n            {figureFocused.name === 'frame' && (\r\n                <FigureFrameProps\r\n                    figure={figureFocused}\r\n                    updatefigure={updatefigure}\r\n                    removeFigure={removeFigure}\r\n                    toTopFigure={toTopFigure}\r\n                />\r\n            )}\r\n        </PanelSection>\r\n    );\r\n};\r\n\r\nexport default FigureProps;\r\n","import { TRect } from \"@brz/ui/src/components/figures\";\r\n\r\nconst getPercentSize = (size: number, percent: number) => {\r\n    return Math.floor(size * percent / 100);\r\n};\r\n\r\ntype TGetBlockSizeProps = {\r\n    imgWidth: number;\r\n    imgHeight: number;\r\n\r\n    wiewportWidth: number;\r\n    wiewportHeight: number;\r\n};\r\n\r\nconst getBlockSize = (props: TGetBlockSizeProps) => {\r\n    const {\r\n        imgWidth,\r\n        imgHeight,\r\n\r\n        wiewportWidth,\r\n        wiewportHeight,\r\n    } = props;\r\n\r\n    const blockW = imgWidth > wiewportWidth ? wiewportWidth : imgWidth;\r\n\r\n    const blockH = imgHeight > wiewportHeight ? wiewportHeight : imgHeight;\r\n\r\n    return {\r\n        blockW,\r\n        blockH,\r\n    };\r\n};\r\n\r\n\r\ntype TGetRectProps = {\r\n    imgWidth: number;\r\n    imgHeight: number;\r\n\r\n    wiewportWidth: number;\r\n    wiewportHeight: number;\r\n\r\n    percent: number;\r\n};\r\n\r\ntype TGetRect = (props: TGetRectProps) => TRect;\r\n\r\nconst getRect: TGetRect = (props) => {\r\n    const { blockW, blockH } = getBlockSize(props);\r\n\r\n    const width = getPercentSize(blockW, props.percent);\r\n    const height = getPercentSize(blockH, props.percent);\r\n\r\n    const x1 = Math.floor(blockW / 2 - width / 2);\r\n    const y1 = Math.floor(blockH / 2 - height / 2);\r\n\r\n    const x2 = x1 + width;\r\n    const y2 = y1 + height;\r\n\r\n    const rect: TRect = [\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2\r\n    ];\r\n\r\n    return rect;\r\n};\r\n\r\nexport default getRect;\r\n","import { useCallback } from 'react';\r\n\r\nimport { TFigure } from '@brz/ui/src/components/figures';\r\n\r\nimport * as drawSelectors from '../state/draw/selectors';\r\nimport * as drawActions from '../state/draw/actions';\r\n\r\nimport useAppSelector from './useAppSelector';\r\nimport useAppDispatch from './useAppDispatch';\r\n\r\ntype TUse = () => {\r\n    figureFocused: TFigure | null;\r\n    setFigureFocused: (figureId: string | null) => void;\r\n};\r\n\r\nconst useFigureFocused: TUse = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const figureFocused = useAppSelector(drawSelectors.figureFocused);\r\n\r\n    const setFigureFocused = useCallback((figureId: string | null) => {\r\n        dispatch(drawActions.setFigureFocusedId(figureId));\r\n    }, [\r\n        dispatch,\r\n    ]);\r\n\r\n    return {\r\n        figureFocused,\r\n        setFigureFocused,\r\n    };\r\n};\r\n\r\nexport default useFigureFocused;\r\n","import React, { useCallback } from 'react';\r\n\r\nimport { Button, getRandomNum, useViewport } from '@brz/ui';\r\n\r\nimport { TPostFigure } from '../../state/draw/operations/addFigureThunk';\r\nimport { TRect } from '@brz/ui/src/components/figures';\r\n\r\nimport getRect from '../../utils/getRect';\r\n\r\nimport { DefaultColor } from '@brz/ui/src/types';\r\nimport { PanelSection, PanelRow } from '../Panel';\r\n\r\nimport useFigureFocused from '../../hooks/useFigureFocused';\r\nimport useImg from '../../hooks/useImg';\r\nimport useFigures from '../../hooks/useFigures';\r\n\r\nconst FigureActions = () => {\r\n    const wiewport = useViewport();\r\n    const img = useImg();\r\n    const { setFigureFocused } = useFigureFocused();\r\n    const { addFigure } = useFigures();\r\n\r\n    const addFigureCallback = useCallback((figure: TPostFigure) => {\r\n        const id = addFigure(figure);\r\n        setFigureFocused(id);\r\n    }, [\r\n        setFigureFocused,\r\n        addFigure,\r\n    ]);\r\n\r\n    const getRectData = useCallback((): TRect => {\r\n        if (img) {\r\n            const [x1, y1, x2, y2] = getRect({\r\n                imgWidth: img.width,\r\n                imgHeight: img.height,\r\n\r\n                wiewportWidth: wiewport[0],\r\n                wiewportHeight: wiewport[1],\r\n\r\n                percent: 45,\r\n            });\r\n\r\n            const paddingX = getRandomNum(0, 150);\r\n            const paddingY = getRandomNum(0, 150);\r\n\r\n            const rect: TRect = [\r\n                x1 + paddingX,\r\n                y1 + paddingY,\r\n                x2 + paddingX,\r\n                y2 + paddingY\r\n            ];\r\n\r\n            return rect;\r\n        }\r\n\r\n        return [0, 0, 0, 0];\r\n    }, [\r\n        img,\r\n        wiewport,\r\n    ]);\r\n\r\n    return (\r\n        <PanelSection>\r\n            <PanelRow>\r\n                <Button\r\n                    text=\"Добавить текст\"\r\n                    onClick={() => {\r\n                        const figure: TPostFigure = {\r\n                            rect: getRectData(),\r\n                            name: 'text',\r\n                            transform: {\r\n                                pointLeft: true,\r\n                                pointTop: true,\r\n                                pointRight: true,\r\n                                pointBottom: true,\r\n                                rect: true,\r\n                            },\r\n                            text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit.',\r\n                            color: DefaultColor,\r\n                            fontSize: 24,\r\n                            borderWidth: 7,\r\n                        };\r\n\r\n                        addFigureCallback(figure);\r\n                    }}\r\n                />\r\n            </PanelRow>\r\n            <PanelRow>\r\n                <Button\r\n                    text=\"Добавить рамку\"\r\n                    onClick={() => {\r\n                        const figure: TPostFigure = {\r\n                            rect: getRectData(),\r\n                            name: 'frame',\r\n                            transform: {\r\n                                pointLeft: true,\r\n                                pointTop: true,\r\n                                pointRight: true,\r\n                                pointBottom: true,\r\n                                rect: true,\r\n                            },\r\n                            borderWidth: 7,\r\n                            borderColor: DefaultColor,\r\n                        };\r\n\r\n                        addFigureCallback(figure);\r\n                    }}\r\n                />\r\n            </PanelRow>\r\n            <PanelRow>\r\n                <Button\r\n                    text=\"Добавить стрелку\"\r\n                    onClick={() => {\r\n                        const figure: TPostFigure = {\r\n                            rect: getRectData(),\r\n                            name: 'arrow',\r\n                            transform: {\r\n                                pointLeft: true,\r\n                                pointTop: false,\r\n                                pointRight: true,\r\n                                pointBottom: false,\r\n                                rect: true,\r\n                            },\r\n                            color: DefaultColor,\r\n                            width: 7,\r\n                        };\r\n\r\n                        addFigureCallback(figure);\r\n                    }}\r\n                />\r\n            </PanelRow>\r\n        </PanelSection>\r\n    );\r\n};\r\n\r\nexport default FigureActions;\r\n","import React, { useCallback } from 'react';\r\n\r\nimport { Button } from '@brz/ui';\r\nimport { PanelSection } from '../Panel';\r\n\r\nimport useGoToPage from '../../hooks/useGoToPage';\r\n\r\nconst CropActions = () => {\r\n\r\n    const goToPage = useGoToPage();\r\n\r\n    const goToCrop = useCallback(() => {\r\n        goToPage('/crop');\r\n    }, [\r\n        goToPage,\r\n    ]);\r\n\r\n    return (\r\n        <PanelSection>\r\n            <Button\r\n                text=\"Кадрировать\"\r\n                onClick={goToCrop}\r\n            />\r\n        </PanelSection>\r\n    );\r\n};\r\n\r\nexport default CropActions;\r\n","var token=/d{1,4}|D{3,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|W{1,2}|[LlopSZN]|\"[^\"]*\"|'[^']*'/g;var timezone=/\\b(?:[A-Z]{1,3}[A-Z][TC])(?:[-+]\\d{4})?|((?:Australian )?(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time)\\b/g;var timezoneClip=/[^-+\\dA-Z]/g;export default function dateFormat(date,mask,utc,gmt){if(arguments.length===1&&typeof date===\"string\"&&!/\\d/.test(date)){mask=date;date=undefined}date=date||date===0?date:new Date;if(!(date instanceof Date)){date=new Date(date)}if(isNaN(date)){throw TypeError(\"Invalid date\")}mask=String(masks[mask]||mask||masks[\"default\"]);var maskSlice=mask.slice(0,4);if(maskSlice===\"UTC:\"||maskSlice===\"GMT:\"){mask=mask.slice(4);utc=true;if(maskSlice===\"GMT:\"){gmt=true}}var _=function _(){return utc?\"getUTC\":\"get\"};var _d=function d(){return date[_()+\"Date\"]()};var D=function D(){return date[_()+\"Day\"]()};var _m=function m(){return date[_()+\"Month\"]()};var y=function y(){return date[_()+\"FullYear\"]()};var _H=function H(){return date[_()+\"Hours\"]()};var _M=function M(){return date[_()+\"Minutes\"]()};var _s=function s(){return date[_()+\"Seconds\"]()};var _L=function L(){return date[_()+\"Milliseconds\"]()};var _o=function o(){return utc?0:date.getTimezoneOffset()};var _W=function W(){return getWeek(date)};var _N=function N(){return getDayOfWeek(date)};var flags={d:function d(){return _d()},dd:function dd(){return pad(_d())},ddd:function ddd(){return i18n.dayNames[D()]},DDD:function DDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:i18n.dayNames[D()],short:true})},dddd:function dddd(){return i18n.dayNames[D()+7]},DDDD:function DDDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:i18n.dayNames[D()+7]})},m:function m(){return _m()+1},mm:function mm(){return pad(_m()+1)},mmm:function mmm(){return i18n.monthNames[_m()]},mmmm:function mmmm(){return i18n.monthNames[_m()+12]},yy:function yy(){return String(y()).slice(2)},yyyy:function yyyy(){return pad(y(),4)},h:function h(){return _H()%12||12},hh:function hh(){return pad(_H()%12||12)},H:function H(){return _H()},HH:function HH(){return pad(_H())},M:function M(){return _M()},MM:function MM(){return pad(_M())},s:function s(){return _s()},ss:function ss(){return pad(_s())},l:function l(){return pad(_L(),3)},L:function L(){return pad(Math.floor(_L()/10))},t:function t(){return _H()<12?i18n.timeNames[0]:i18n.timeNames[1]},tt:function tt(){return _H()<12?i18n.timeNames[2]:i18n.timeNames[3]},T:function T(){return _H()<12?i18n.timeNames[4]:i18n.timeNames[5]},TT:function TT(){return _H()<12?i18n.timeNames[6]:i18n.timeNames[7]},Z:function Z(){return gmt?\"GMT\":utc?\"UTC\":formatTimezone(date)},o:function o(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60)*100+Math.abs(_o())%60,4)},p:function p(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60),2)+\":\"+pad(Math.floor(Math.abs(_o())%60),2)},S:function S(){return[\"th\",\"st\",\"nd\",\"rd\"][_d()%10>3?0:(_d()%100-_d()%10!=10)*_d()%10]},W:function W(){return _W()},WW:function WW(){return pad(_W())},N:function N(){return _N()}};return mask.replace(token,function(match){if(match in flags){return flags[match]()}return match.slice(1,match.length-1)})}export var masks={default:\"ddd mmm dd yyyy HH:MM:ss\",shortDate:\"m/d/yy\",paddedShortDate:\"mm/dd/yyyy\",mediumDate:\"mmm d, yyyy\",longDate:\"mmmm d, yyyy\",fullDate:\"dddd, mmmm d, yyyy\",shortTime:\"h:MM TT\",mediumTime:\"h:MM:ss TT\",longTime:\"h:MM:ss TT Z\",isoDate:\"yyyy-mm-dd\",isoTime:\"HH:MM:ss\",isoDateTime:\"yyyy-mm-dd'T'HH:MM:sso\",isoUtcDateTime:\"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",expiresHeaderFormat:\"ddd, dd mmm yyyy HH:MM:ss Z\"};export var i18n={dayNames:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],monthNames:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],timeNames:[\"a\",\"p\",\"am\",\"pm\",\"A\",\"P\",\"AM\",\"PM\"]};var pad=function pad(val){var len=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;return String(val).padStart(len,\"0\")};var getDayName=function getDayName(_ref){var y=_ref.y,m=_ref.m,d=_ref.d,_=_ref._,dayName=_ref.dayName,_ref$short=_ref[\"short\"],_short=_ref$short===void 0?false:_ref$short;var today=new Date;var yesterday=new Date;yesterday.setDate(yesterday[_+\"Date\"]()-1);var tomorrow=new Date;tomorrow.setDate(tomorrow[_+\"Date\"]()+1);var today_d=function today_d(){return today[_+\"Date\"]()};var today_m=function today_m(){return today[_+\"Month\"]()};var today_y=function today_y(){return today[_+\"FullYear\"]()};var yesterday_d=function yesterday_d(){return yesterday[_+\"Date\"]()};var yesterday_m=function yesterday_m(){return yesterday[_+\"Month\"]()};var yesterday_y=function yesterday_y(){return yesterday[_+\"FullYear\"]()};var tomorrow_d=function tomorrow_d(){return tomorrow[_+\"Date\"]()};var tomorrow_m=function tomorrow_m(){return tomorrow[_+\"Month\"]()};var tomorrow_y=function tomorrow_y(){return tomorrow[_+\"FullYear\"]()};if(today_y()===y&&today_m()===m&&today_d()===d){return _short?\"Tdy\":\"Today\"}else if(yesterday_y()===y&&yesterday_m()===m&&yesterday_d()===d){return _short?\"Ysd\":\"Yesterday\"}else if(tomorrow_y()===y&&tomorrow_m()===m&&tomorrow_d()===d){return _short?\"Tmw\":\"Tomorrow\"}return dayName};var getWeek=function getWeek(date){var targetThursday=new Date(date.getFullYear(),date.getMonth(),date.getDate());targetThursday.setDate(targetThursday.getDate()-(targetThursday.getDay()+6)%7+3);var firstThursday=new Date(targetThursday.getFullYear(),0,4);firstThursday.setDate(firstThursday.getDate()-(firstThursday.getDay()+6)%7+3);var ds=targetThursday.getTimezoneOffset()-firstThursday.getTimezoneOffset();targetThursday.setHours(targetThursday.getHours()-ds);var weekDiff=(targetThursday-firstThursday)/(864e5*7);return 1+Math.floor(weekDiff)};var getDayOfWeek=function getDayOfWeek(date){var dow=date.getDay();if(dow===0){dow=7}return dow};export var formatTimezone=function formatTimezone(date){return(String(date).match(timezone)||[\"\"]).pop().replace(timezoneClip,\"\").replace(/GMT\\+0000/g,\"UTC\")};","import dateFormat from 'dateformat';\r\n\r\nconst getfileName = (ext: string): string => {\r\n\tconst now = new Date();\r\n\tconst dateStr = dateFormat(now, \"yyyy-mm-dd--ss\");\r\n\r\n\tconst fileName = `screen-capture--${dateStr}.${ext}`;\r\n\treturn fileName;\r\n};\r\n\r\nexport default getfileName;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"style_dialog__1IOUK\",\"dialogBody\":\"style_dialogBody__pwkzJ\",\"dialogActions\":\"style_dialogActions__qS7mA\"};","import React from 'react';\r\nimport {\r\n    InputTextArea,\r\n    Button,\r\n    Dialog,\r\n    copyTextToClipboard,\r\n} from '@brz/ui';\r\n\r\nimport useBeep from '../../hooks/useBeep';\r\n\r\nimport styles from './style.module.css';\r\n\r\ntype TProps = {\r\n    dataURL: string;\r\n    onClose: () => void;\r\n};\r\n\r\nconst DataURL = (props: TProps) => {\r\n    const {\r\n        dataURL,\r\n        onClose,\r\n    } = props;\r\n\r\n    const { beepInfo } = useBeep();\r\n\r\n    if (!dataURL) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog>\r\n            <div className={styles.dialog}>\r\n                <div className={styles.dialogBody}>\r\n                    <InputTextArea\r\n                        value={dataURL}\r\n                        onCopy={() => {\r\n                            beepInfo('Скопировано!');\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles.dialogActions}>\r\n                    <Button\r\n                        text=\"Копировать текст\"\r\n                        onClick={() => {\r\n                            copyTextToClipboard(dataURL);\r\n                            beepInfo('Скопировано!');\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        text='Закрыть'\r\n                        onClick={onClose}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default DataURL;\r\n","import React, { useCallback, useState } from 'react';\r\n\r\nimport getfileName from './getfileName';\r\n\r\nimport {\r\n    blobToDataURL,\r\n    Button,\r\n    copyImagePngToClipboard,\r\n    download,\r\n    Loading,\r\n    useIsMounted,\r\n    useSpin,\r\n} from '@brz/ui';\r\n\r\nimport CombineBoard from '../CombineBoard';\r\nimport { PanelRow, PanelSection } from '../Panel';\r\nimport DataURL from '../DataURL';\r\n\r\nimport useBeep from '../../hooks/useBeep';\r\n\r\nconst ImageActions = () => {\r\n    const [spinActions, setSpinActions] = useSpin(false);\r\n\r\n    const isMounted = useIsMounted();\r\n\r\n    const [dataURL, setDataURL] = useState('');\r\n\r\n    const { beepError, beepInfo } = useBeep();\r\n\r\n    const [combine, setCombine] = useState<'TO_FILE' | 'TO_CLIP_BOARD' | 'TO_DATA_URL' | false>(false);\r\n\r\n    const onReadyCombine = useCallback(async (imagePngBlob: Blob) => {\r\n        setSpinActions(true);\r\n        try {\r\n            if (combine === 'TO_CLIP_BOARD') {\r\n                copyImagePngToClipboard(imagePngBlob);\r\n                beepInfo('Скопировано!');\r\n            }\r\n\r\n            if (combine === 'TO_FILE') {\r\n                const fileName = getfileName('png');\r\n                await download(imagePngBlob, fileName);\r\n            }\r\n\r\n            if (combine === 'TO_DATA_URL') {\r\n                const dataURL = await blobToDataURL(imagePngBlob);\r\n                if (isMounted()) {\r\n                    setDataURL(dataURL);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            beepError(error);\r\n        }\r\n        setSpinActions(false);\r\n    }, [\r\n        combine,\r\n        setSpinActions,\r\n        beepError,\r\n        beepInfo,\r\n        isMounted,\r\n    ]);\r\n\r\n    const onCloseDataURL = useCallback(() => {\r\n        setDataURL('');\r\n    }, []);\r\n\r\n    const spin = spinActions || combine;\r\n\r\n    return (\r\n        <>\r\n            <PanelSection>\r\n                <PanelRow>\r\n                    <Button\r\n                        text=\"Копировать картинку в буфер\"\r\n                        onClick={() => {\r\n                            setCombine('TO_CLIP_BOARD');\r\n                        }}\r\n                    />\r\n                </PanelRow>\r\n                <PanelRow>\r\n                    <Button\r\n                        text=\"Cохранить картинку как файл\"\r\n                        onClick={() => {\r\n                            setCombine('TO_FILE');\r\n                        }}\r\n                    />\r\n                </PanelRow>\r\n                <PanelRow>\r\n                    <Button\r\n                        text=\"DataUrl\"\r\n                        onClick={() => {\r\n                            setCombine('TO_DATA_URL');\r\n                        }}\r\n                    />\r\n                </PanelRow>\r\n            </PanelSection>\r\n\r\n            <DataURL\r\n                dataURL={dataURL}\r\n                onClose={onCloseDataURL}\r\n            />\r\n\r\n            {combine && (\r\n                <CombineBoard\r\n                    onReady={(imagePngBlob) => {\r\n                        onReadyCombine(imagePngBlob);\r\n                        setCombine(false);\r\n                    }}\r\n                    onError={(error) => {\r\n                        beepError(error);\r\n                        setCombine(false);\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {spin && (\r\n                <Loading />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageActions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"style_root__ltIR-\",\"figureProps\":\"style_figureProps__OtpzB\",\"figures\":\"style_figures__Uow8E\",\"figureItem\":\"style_figureItem__yOH7a\",\"figureItemFocused\":\"style_figureItemFocused__DX4Vc\",\"link\":\"style_link__bCJE5\",\"remove\":\"style_remove__WQGz7\"};","import React, { useState, useCallback } from 'react';\r\n\r\nimport { TFigure } from '@brz/ui/src/components';\r\n\r\nimport FigureProps from '../../../componeents/FigureProps';\r\nimport FigureActions from '../../../componeents/FigureActions';\r\nimport CropActions from '../../../componeents/CropActions';\r\nimport ImageActions from '../../../componeents/ImageActions';\r\nimport Panel, { PanelSection } from '../../../componeents/Panel';\r\nimport ConfirmRemoveFigure from '../../../componeents/ConfirmRemoveFigure';\r\nimport RemoveFigureDialog from '../../../componeents/RemoveFigureDialog';\r\n\r\nimport useFigures from '../../../hooks/useFigures';\r\nimport useFigureFocused from '../../../hooks/useFigureFocused';\r\nimport { useDocumentKeyup } from '@brz/ui';\r\n\r\nimport styles from './style.module.css';\r\n\r\nconst Actions = () => {\r\n    const { figures, removeFigure } = useFigures();\r\n    const { figureFocused, setFigureFocused } = useFigureFocused();\r\n\r\n    const figureFocusedId = figureFocused !== null ? figureFocused.id : null;\r\n\r\n    const [figureForRemove, setFigureForRemove] = useState<TFigure | null>(null);\r\n\r\n    const keyup = useCallback((key: string) => {\r\n        if (key === \"Delete\" && figureFocused !== null) {\r\n            setFigureForRemove(figureFocused);\r\n        }\r\n    }, [\r\n        figureFocused,\r\n    ]);\r\n\r\n    useDocumentKeyup(keyup);\r\n\r\n    return (\r\n        <>\r\n            <Panel>\r\n                <div\r\n                    onClick={(event) => {\r\n                        event.stopPropagation();\r\n                    }}\r\n                    className={styles.root}\r\n                >\r\n                    {figures.length > 0 && (\r\n                        <PanelSection>\r\n                            <div className={styles.figures}>\r\n                                {figures.map((figure) => {\r\n                                    const figureId = figure.id;\r\n                                    const focused = figureFocusedId === figureId;\r\n\r\n                                    const figureItemClassName = `${styles.figureItem} ${focused ? styles.figureItemFocused : ''}`;\r\n                                    return (\r\n                                        <div\r\n                                            key={figureId}\r\n                                            className={figureItemClassName}\r\n                                            onClick={() => {\r\n                                                setFigureFocused(figureId);\r\n                                            }}\r\n                                        >\r\n                                            <div\r\n                                                className={styles.link}\r\n                                            >\r\n                                                {figure.name}\r\n                                            </div>\r\n\r\n                                            {focused && (\r\n                                                <div className={styles.remove}>\r\n                                                    <ConfirmRemoveFigure\r\n                                                        figure={figure}\r\n                                                        remove={removeFigure}\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </PanelSection>\r\n                    )}\r\n\r\n                    <FigureActions />\r\n\r\n                    <CropActions />\r\n\r\n                    <ImageActions />\r\n\r\n                    <div className={styles.figureProps}>\r\n                        <FigureProps />\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n\r\n            {!!figureForRemove && (\r\n                <RemoveFigureDialog\r\n                    figure={figureForRemove}\r\n                    cancel={() => {\r\n                        setFigureForRemove(null)\r\n                    }}\r\n                    submit={() => {\r\n                        removeFigure(figureForRemove.id);\r\n                        setFigureForRemove(null);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Actions;\r\n","import React, { useEffect, useCallback } from 'react';\n\nimport { Transform } from '@brz/ui';\n\nimport { TImg } from '../../state/draw/types/types';\n\nimport * as drawActions from '../../state/draw/actions';\n\nimport LayoutBoard from '../../componeents/LayoutBoard';\nimport Figure from '../../componeents/Figure';\nimport Actions from './Actions';\nimport ImgBoard from '../../componeents/ImgBoard';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useFigures from '../../hooks/useFigures';\nimport useFigureFocused from '../../hooks/useFigureFocused';\n\ntype TProps = {\n    img: TImg;\n};\n\nconst DrawPage = (props: TProps) => {\n    const {\n        img,\n    } = props;\n\n    const dispatch = useAppDispatch();\n    const { figures } = useFigures();\n    const { figureFocused, setFigureFocused } = useFigureFocused();\n\n    const clearFocus = useCallback(() => {\n        setFigureFocused(null);\n    }, [\n        setFigureFocused,\n    ]);\n\n    useEffect(() => {\n        window.addEventListener('click', clearFocus);\n        return () => {\n            window.removeEventListener('click', clearFocus);\n        };\n    }, [\n        clearFocus,\n    ]);\n\n    const figureFocusedId = figureFocused !== null ? figureFocused.id : null;\n\n    return (\n        <>\n            <LayoutBoard bg='light'>\n                <ImgBoard\n                    img={img}\n                    body1={(\n                        <>\n                            {figures.map((figure) => {\n                                const figureId = figure.id;\n                                const focused = figureFocusedId === figureId;\n                                if (focused) {\n                                    return null;\n                                }\n                                return (\n                                    <Figure\n                                        key={figureId}\n                                        figure={figure}\n                                        onPointerDown={(event) => {\n                                            event.stopPropagation();\n                                            setFigureFocused(figureId);\n                                        }}\n                                        showHover={true}\n                                    />\n                                );\n                            })}\n                        </>\n                    )}\n                    body2={(\n                        <>\n                            {figures.map((figure) => {\n                                const figureId = figure.id;\n                                const focused = figureFocusedId === figureId;\n                                return (\n                                    <Transform\n                                        key={figureId}\n                                        rect={figure.rect}\n                                        transformMap={figure.transform}\n                                        onEnd={(rect) => {\n                                            dispatch(drawActions.setFigureRect({\n                                                figureId,\n                                                rect,\n                                            }));\n                                        }}\n                                        visibility={focused}\n                                    >\n                                        {(rect) => {\n                                            if (focused) {\n                                                return (\n                                                    <Figure\n                                                        figure={{\n                                                            ...figure,\n                                                            rect,\n                                                        }}\n                                                    />\n                                                );\n                                            }\n                                            return (\n                                                <></>\n                                            );\n                                        }}\n                                    </Transform>\n                                );\n                            })}\n                        </>\n                    )}\n                />\n            </LayoutBoard>\n\n            <Actions />\n        </>\n    );\n};\n\nexport default DrawPage;\n","import React, { useEffect } from 'react';\n\nimport * as drawSelectors from '../../state/draw/selectors';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useGoToPage from '../../hooks/useGoToPage';\n\nimport DrawPage from './DrawPage';\n\nconst Draw = () => {\n    const img = useAppSelector(drawSelectors.img);\n\n    const goToPage = useGoToPage();\n\n    useEffect(() => {\n        if (!img) {\n            goToPage('/');\n        }\n    }, [\n        goToPage,\n        img,\n    ]);\n\n    if (!img) {\n        return null;\n    }\n\n    return (\n        <DrawPage img={img} />\n    );\n};\n\nexport default Draw;\n"],"names":["props","figure","submit","cancel","_jsx","Dialog","children","_jsxs","className","styles","onClick","event","stopPropagation","name","Button","text","remove","_useState","useState","_useState2","_slicedToArray","showConfirm","setShowConfirm","_Fragment","DeleteIcon","RemoveFigureDialog","id","toTop","ConfirmRemoveFigure","updatefigure","removeFigure","toTopFigure","Label","htmlFor","InputColor","value","color","onChange","_objectSpread","InputNumber","fontSize","min","max","InputTextArea","resize","borderWidth","RowInputActions","width","borderColor","figureFocused","useAppSelector","drawSelectors","dispatch","useAppDispatch","useCallback","figureId","drawActions","PanelSection","FigureTextProps","FigureArrowProps","FigureFrameProps","getPercentSize","size","percent","Math","floor","_getBlockSize","imgWidth","imgHeight","wiewportWidth","wiewportHeight","blockW","blockH","getBlockSize","height","x1","y1","setFigureFocused","wiewport","useViewport","img","useImg","useFigureFocused","addFigure","useFigures","addFigureCallback","getRectData","_getRect","getRect","_getRect2","x2","y2","paddingX","getRandomNum","paddingY","PanelRow","rect","transform","pointLeft","pointTop","pointRight","pointBottom","DefaultColor","goToPage","useGoToPage","goToCrop","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","arguments","length","test","undefined","Date","isNaN","TypeError","maskSlice","String","masks","slice","_","_d","D","_m","y","_H","_M","_s","_L","_o","getTimezoneOffset","_W","getWeek","flags","d","dd","pad","ddd","i18n","dayNames","DDD","getDayName","m","dayName","short","dddd","DDDD","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","H","HH","M","MM","s","ss","l","L","t","timeNames","tt","T","TT","Z","formatTimezone","o","abs","p","S","W","WW","N","getDayOfWeek","replace","match","default","shortDate","paddedShortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","val","len","padStart","_ref","_ref$short","_short","today","yesterday","setDate","tomorrow","targetThursday","getFullYear","getMonth","getDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","dow","pop","ext","dateStr","concat","dataURL","onClose","beepInfo","useBeep","onCopy","copyTextToClipboard","_useSpin","useSpin","_useSpin2","spinActions","setSpinActions","isMounted","useIsMounted","setDataURL","_useBeep","beepError","_useState3","_useState4","combine","setCombine","onReadyCombine","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imagePngBlob","fileName","_dataURL","wrap","_context","prev","next","copyImagePngToClipboard","getfileName","download","blobToDataURL","sent","t0","stop","_x","apply","onCloseDataURL","spin","DataURL","CombineBoard","onReady","onError","error","Loading","_useFigures","figures","_useFigureFocused","figureFocusedId","figureForRemove","setFigureForRemove","keyup","key","useDocumentKeyup","Panel","map","focused","figureItemClassName","FigureActions","CropActions","ImageActions","FigureProps","clearFocus","useEffect","window","addEventListener","removeEventListener","LayoutBoard","bg","ImgBoard","body1","Figure","onPointerDown","showHover","body2","Transform","transformMap","onEnd","visibility","Actions","DrawPage"],"sourceRoot":""}