{"version":3,"file":"static/js/348.60f64964.chunk.js","mappings":"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","sources":["hooks/useDrawInit.ts","utils/getCropNormRect.ts","webpack://@brz/screen-capture/./src/componeents/СropRect/Shade.module.css?6c3b","componeents/СropRect/Shade.tsx","componeents/СropRect/index.tsx","pages/Crop/getRect.ts","pages/Crop/useCropRect.tsx","pages/Crop/CropPage.tsx","pages/Crop/index.tsx"],"sourcesContent":["import { useCallback } from 'react';\r\n\r\nimport { TImg } from '../state/draw/types/types';\r\n\r\nimport * as drawActions from '../state/draw/actions';\r\n\r\nimport useAppDispatch from './useAppDispatch';\r\n\r\nconst useDrawInit = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const drawInit = useCallback((img: TImg) => {\r\n        dispatch(drawActions.init(img));\r\n    }, [\r\n        dispatch,\r\n    ]);\r\n\r\n    return drawInit;\r\n};\r\n\r\nexport default useDrawInit;\r\n","import { TRect } from \"@brz/ui/src/components/figures\";\r\n\r\ntype TGetCropNormRect = (\r\n    anyRect: TRect,\r\n    imgWidth: number,\r\n    imgHeight: number\r\n) => TRect;\r\n\r\nconst getCropNormRect: TGetCropNormRect = (anyRect, imgWidth, imgHeight) => {\r\n    // Делаем чтоб x1 < x2, y1 < y2, \r\n    let [x1, y1, x2, y2] = anyRect;\r\n\r\n    if (x1 > x2) {\r\n        [x1, x2] = [x2, x1];\r\n    }\r\n    if (y1 > y2) {\r\n        [y1, y2] = [y2, y1];\r\n    }\r\n    // ---\r\n    if (x1 < 0) {\r\n        x1 = 0;\r\n    }\r\n    if (y1 < 0) {\r\n        y1 = 0;\r\n    }\r\n    if (x2 > imgWidth) {\r\n        x2 = imgWidth;\r\n    }\r\n    if (y2 > imgHeight) {\r\n        y2 = imgHeight;\r\n    }\r\n\r\n    return [x1, y1, x2, y2];\r\n};\r\n\r\nexport default getCropNormRect;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"shade\":\"Shade_shade__k3-dc\",\"horizontal\":\"Shade_horizontal__Bc8+3\",\"vertical\":\"Shade_vertical__yA5RK\"};","import { CSSProperties } from \"react\";\n\nimport { TRect } from \"@brz/ui/src/components/figures\";\n\nimport styles from './Shade.module.css';\n\ntype TProps = {\n    rect: TRect;\n};\n\nconst Shade = (props: TProps) => {\n    const { rect } = props;\n\n    const [x1, y1, x2, y2] = rect;\n\n    const shade1Style: CSSProperties = {\n        left: 0,\n        right: 0,\n        top: 0,\n        height: `${y1}px`,\n    };\n\n    const shade2Style: CSSProperties = {\n        left: 0,\n        right: 0,\n        top: `${y2}px`,\n        bottom: 0,\n    };\n\n    const shade3Style: CSSProperties = {\n        left: 0,\n        top: `${y1}px`,\n        width: `${x1}px`,\n        height: `${y2 - y1}px`,\n    };\n\n    const shade4Style: CSSProperties = {\n        left: `${x2}px`,\n        top: `${y1}px`,\n        right: 0,\n        height: `${y2 - y1}px`,\n    };\n\n    // const shade5Style: CSSProperties = {\n    //     top: `${y1}px`,\n    // };\n\n    // const shade6Style: CSSProperties = {\n    //     top: `${y2}px`,\n    // };\n\n    // const shade7Style: CSSProperties = {\n    //     left: `${x1}px`,\n    // };\n\n    // const shade8Style: CSSProperties = {\n    //     left: `${x2}px`,\n    // };\n\n    return (\n        <>\n            <div\n                className={styles.shade}\n                style={shade1Style}\n            />\n            <div\n                className={styles.shade}\n                style={shade2Style}\n            />\n            <div\n                className={styles.shade}\n                style={shade3Style}\n            />\n            <div\n                className={styles.shade}\n                style={shade4Style}\n            />\n            {/* <div\n                className={styles.horizontal}\n                style={shade5Style}\n            />\n            <div\n                className={styles.horizontal}\n                style={shade6Style}\n            />\n            <div\n                className={styles.vertical}\n                style={shade7Style}\n            />\n            <div\n                className={styles.vertical}\n                style={shade8Style}\n            /> */}\n        </>\n    );\n};\n\nexport default Shade;\n","import { TRect } from \"@brz/ui/src/components/figures\";\n\nimport Shade from \"./Shade\";\n\ntype TProps = {\n    rect: TRect;\n};\n\nconst СropRect = (props: TProps) => {\n    const {\n        rect,\n    } = props;\n\n    return (\n        <Shade rect={rect} />\n    );\n};\n\nexport default СropRect;\n","import { TRect } from \"@brz/ui/src/components/figures\";\r\n\r\nconst PERSENT = 50;\r\n\r\nconst getPercentSize = (size: number, percent: number) => {\r\n    return Math.floor(size * percent / 100);\r\n};\r\n\r\ntype TProps = {\r\n    imgWidth: number;\r\n    imgHeight: number;\r\n\r\n    wiewportWidth: number;\r\n    wiewportHeight: number;\r\n};\r\n\r\ntype TGetRndRect = (props: TProps) => TRect;\r\n\r\nconst getBlockSize = (props: TProps) => {\r\n    const {\r\n        imgWidth,\r\n        imgHeight,\r\n\r\n        wiewportWidth,\r\n        wiewportHeight,\r\n    } = props;\r\n\r\n    const blockW = imgWidth > wiewportWidth ? wiewportWidth : imgWidth;\r\n\r\n    const blockH = imgHeight > wiewportHeight ? wiewportHeight : imgHeight;\r\n\r\n    return {\r\n        blockW,\r\n        blockH,\r\n    };\r\n};\r\n\r\nconst getRect: TGetRndRect = (props) => {\r\n    const { blockW, blockH } = getBlockSize(props);\r\n\r\n    const width = getPercentSize(blockW, PERSENT);\r\n    const height = getPercentSize(blockH, PERSENT);\r\n\r\n    const x1 = Math.floor(blockW / 2 - width / 2);\r\n    const y1 = Math.floor(blockH / 2 - height / 2);\r\n\r\n    const x2 = x1 + width;\r\n    const y2 = y1 + height;\r\n\r\n    const rect: TRect = [\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2\r\n    ];\r\n\r\n    return rect;\r\n};\r\n\r\nexport default getRect;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { TImg } from '../../state/draw/types/types';\r\nimport { TRect } from '@brz/ui/src/components/figures';\r\n\r\nimport { useViewport } from '@brz/ui';\r\n\r\nimport getRect from './getRect';\r\n\r\ntype TUse = (img: TImg) => [\r\n    cropRect: TRect,\r\n    setCropRect: (rect: TRect) => void,\r\n];\r\n\r\nconst useCropRect: TUse = (img) => {\r\n    const wiewport = useViewport();\r\n\r\n    const [cropRect, setCropRect] = useState<TRect>([0, 0, 0, 0]);\r\n\r\n    useEffect(() => {\r\n        const rect = getRect({\r\n            imgWidth: img.width,\r\n            imgHeight: img.height,\r\n\r\n            wiewportWidth: wiewport[0],\r\n            wiewportHeight: wiewport[1],\r\n        });\r\n\r\n        setCropRect(rect);\r\n    }, [\r\n        wiewport,\r\n        img.width,\r\n        img.height,\r\n    ]);\r\n\r\n    return [\r\n        cropRect,\r\n        setCropRect,\r\n    ];\r\n};\r\n\r\nexport default useCropRect\r\n\r\n","import React, { useCallback, useState } from 'react';\r\n\r\nimport { TImg } from '../../state/draw/types/types';\r\n\r\nimport { Button, cropImg, Loading, Transform } from '@brz/ui';\r\n\r\nimport getCropNormRect from '../../utils/getCropNormRect';\r\n\r\nimport Figure from '../../componeents/Figure';\r\nimport Panel, { PanelRow, PanelSection } from '../../componeents/Panel';\r\nimport СropRect from '../../componeents/СropRect';\r\nimport ImgBoard from '../../componeents/ImgBoard';\r\nimport CombineBoard from '../../componeents/CombineBoard';\r\nimport LayoutBoard from '../../componeents/LayoutBoard';\r\n\r\nimport useGoToPage from '../../hooks/useGoToPage';\r\nimport useFigures from '../../hooks/useFigures';\r\nimport useDrawInit from '../../hooks/useDrawInit';\r\nimport useBeep from '../../hooks/useBeep';\r\nimport useCropRect from './useCropRect';\r\n\r\ntype TProps = {\r\n    img: TImg;\r\n};\r\n\r\nconst CropPage = (props: TProps) => {\r\n    const {\r\n        img,\r\n    } = props;\r\n\r\n    const { beepError } = useBeep();\r\n    const goToPage = useGoToPage();\r\n    const drawInit = useDrawInit();\r\n    const { figures } = useFigures();\r\n\r\n    const [cropRect, setCropRect] = useCropRect(img);\r\n\r\n    const cansel = useCallback(() => {\r\n        goToPage('/draw');\r\n    }, [\r\n        goToPage,\r\n    ]);\r\n\r\n    const [combine, setCombine] = useState(false);\r\n\r\n    const runCrop = useCallback(async (imagePngBlob: Blob) => {\r\n        try {\r\n            const cropNormRect = getCropNormRect(cropRect, img.width, img.height);\r\n\r\n            const dataUrl = window.URL.createObjectURL(imagePngBlob);\r\n\r\n            const data = await cropImg(dataUrl, cropNormRect);\r\n\r\n            window.URL.revokeObjectURL(dataUrl);\r\n\r\n            drawInit(data);\r\n\r\n            goToPage('/draw');\r\n        } catch (error) {\r\n            beepError(error);\r\n        }\r\n    }, [\r\n        drawInit,\r\n        cropRect,\r\n        goToPage,\r\n        img.width,\r\n        img.height,\r\n        beepError,\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <LayoutBoard bg='dark'>\r\n                <ImgBoard\r\n                    img={img}\r\n                    body1={(\r\n                        <>\r\n                            {figures.map((figure) => (\r\n                                <Figure\r\n                                    key={figure.id}\r\n                                    figure={figure}\r\n                                />\r\n                            ))}\r\n                        </>\r\n                    )}\r\n                    body2={(\r\n                        <>\r\n                            <Transform\r\n                                rect={cropRect}\r\n                                onEnd={setCropRect}\r\n                                visibility={true}\r\n                            >\r\n                                {(rect) => {\r\n                                    const cropNormRect = getCropNormRect(rect, img.width, img.height);\r\n                                    return (\r\n                                        <СropRect\r\n                                            rect={cropNormRect}\r\n                                        />\r\n                                    );\r\n                                }}\r\n                            </Transform>\r\n                        </>\r\n                    )}\r\n                />\r\n            </LayoutBoard>\r\n\r\n            <Panel>\r\n                <PanelSection>\r\n                    <PanelRow>\r\n                        <Button\r\n                            text=\"Применить\"\r\n                            onClick={() => {\r\n                                setCombine(true);\r\n                            }}\r\n                        />\r\n                    </PanelRow>\r\n                    <PanelRow>\r\n                        <Button\r\n                            text=\"Отмена\"\r\n                            onClick={cansel}\r\n                        />\r\n                    </PanelRow>\r\n                </PanelSection>\r\n            </Panel>\r\n\r\n            {combine && (\r\n                <>\r\n                    <CombineBoard\r\n                        onReady={(imagePngBlob) => {\r\n                            runCrop(imagePngBlob);\r\n                            setCombine(false);\r\n                        }}\r\n                        onError={(error) => {\r\n                            beepError(error);\r\n                            setCombine(false);\r\n                        }}\r\n                    />\r\n                    <Loading />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CropPage;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport * as drawSelectors from '../../state/draw/selectors';\r\n\r\nimport useAppSelector from '../../hooks/useAppSelector';\r\nimport useGoToPage from '../../hooks/useGoToPage';\r\n\r\nimport CropPage from './CropPage';\r\n\r\nconst Crop = () => {\r\n    const img = useAppSelector(drawSelectors.img);\r\n\r\n    const goToPage = useGoToPage();\r\n\r\n    useEffect(() => {\r\n        if (!img) {\r\n            goToPage('/');\r\n        }\r\n    }, [\r\n        goToPage,\r\n        img,\r\n    ]);\r\n\r\n    if (!img) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <CropPage img={img} />\r\n    );\r\n};\r\n\r\nexport default Crop;\r\n"],"names":["dispatch","useAppDispatch","useCallback","img","drawActions","anyRect","imgWidth","imgHeight","_anyRect","_slicedToArray","x1","y1","x2","y2","_ref","_ref2","props","rect","_rect","shade1Style","left","right","top","height","concat","shade2Style","bottom","shade3Style","width","shade4Style","_jsxs","_Fragment","children","_jsx","className","styles","style","Shade","getPercentSize","size","percent","Math","floor","_getBlockSize","wiewportWidth","wiewportHeight","blockW","blockH","getBlockSize","wiewport","useViewport","_useState","useState","_useState2","cropRect","setCropRect","useEffect","getRect","beepError","useBeep","goToPage","useGoToPage","drawInit","useDrawInit","figures","useFigures","_useCropRect","useCropRect","_useCropRect2","cansel","combine","setCombine","runCrop","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imagePngBlob","cropNormRect","dataUrl","data","wrap","_context","prev","next","getCropNormRect","window","URL","createObjectURL","cropImg","sent","revokeObjectURL","t0","stop","_x","apply","arguments","LayoutBoard","bg","ImgBoard","body1","map","figure","Figure","id","body2","Transform","onEnd","visibility","СropRect","Panel","PanelSection","PanelRow","Button","text","onClick","CombineBoard","onReady","onError","error","Loading","useAppSelector","drawSelectors","CropPage"],"sourceRoot":""}